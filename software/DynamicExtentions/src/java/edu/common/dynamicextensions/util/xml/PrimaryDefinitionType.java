//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2010.07.27 at 07:59:00 PM IST
//


package edu.common.dynamicextensions.util.xml;

import java.util.Collection;

import javax.xml.bind.annotation.AccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;

import edu.common.dynamicextensions.domaininterface.SemanticPropertyInterface;


/**
 * <p>Java class for primaryDefinitionType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="primaryDefinitionType">
 * &lt;complexContent>
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 * &lt;sequence>
 * &lt;element name="conceptDefinitionSource" type="{http://www.w3.org/2001/XMLSchema}string"/>
 * &lt;element name="conceptCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 * &lt;element name="conceptPreferredName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 * &lt;element name="conceptDefinition" type="{http://www.w3.org/2001/XMLSchema}string"/>
 * &lt;/sequence>
 * &lt;/restriction>
 * &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(AccessType.FIELD)
@XmlType(name = "primaryDefinitionType", propOrder = {
    "primaryConceptDefinitionSource",
    "primaryConceptCode",
    "primaryConceptPreferredName",
    "primaryConceptDefinition"
})
public class PrimaryDefinitionType implements SemanticPropertyInterface{


	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -8408160901588569502L;

	/** The concept definition source. */
	protected String primaryConceptDefinitionSource;

    /** The concept code. */
    protected String primaryConceptCode;

    /** The concept preferred name. */
    protected String primaryConceptPreferredName;

    /** The concept definition. */
    protected String primaryConceptDefinition;

	/**
	 * @return the primaryConceptDefinitionSource
	 */
	public String getPrimaryConceptDefinitionSource()
	{
		return primaryConceptDefinitionSource;
	}


	/**
	 * @param primaryConceptDefinitionSource the primaryConceptDefinitionSource to set
	 */
	public void setPrimaryConceptDefinitionSource(String primaryConceptDefinitionSource)
	{
		this.primaryConceptDefinitionSource = primaryConceptDefinitionSource;
	}


	/**
	 * @return the primaryConceptCode
	 */
	public String getPrimaryConceptCode()
	{
		return primaryConceptCode;
	}


	/**
	 * @param primaryConceptCode the primaryConceptCode to set
	 */
	public void setPrimaryConceptCode(String primaryConceptCode)
	{
		this.primaryConceptCode = primaryConceptCode;
	}


	/**
	 * @return the primaryConceptPreferredName
	 */
	public String getPrimaryConceptPreferredName()
	{
		return primaryConceptPreferredName;
	}


	/**
	 * @param primaryConceptPreferredName the primaryConceptPreferredName to set
	 */
	public void setPrimaryConceptPreferredName(String primaryConceptPreferredName)
	{
		this.primaryConceptPreferredName = primaryConceptPreferredName;
	}


	/**
	 * @return the primaryConceptDefinition
	 */
	public String getPrimaryConceptDefinition()
	{
		return primaryConceptDefinition;
	}


	/**
	 * @param primaryConceptDefinition the primaryConceptDefinition to set
	 */
	public void setPrimaryConceptDefinition(String primaryConceptDefinition)
	{
		this.primaryConceptDefinition = primaryConceptDefinition;
	}

	/**
     * Gets the value of the conceptDefinitionSource property.
     * @return the concept definition source
     * possible object is
     * {@link String }
     */
    public String getConceptDefinitionSource() {
        return getPrimaryConceptDefinitionSource();
    }

    /**
     * Sets the value of the conceptDefinitionSource property.
     * @param value allowed object is
     * {@link String }
     */
    public void setConceptDefinitionSource(String value) {
        setPrimaryConceptDefinition(value);
    }

    /**
     * Gets the value of the conceptCode property.
     * @return the concept code
     * possible object is
     * {@link String }
     */
    public String getConceptCode() {
        return getPrimaryConceptCode();
    }

    /**
     * Sets the value of the conceptCode property.
     * @param value allowed object is
     * {@link String }
     */
    public void setConceptCode(String value) {
    	setPrimaryConceptCode(value);
    }

    /**
     * Gets the value of the conceptPreferredName property.
     * @return the concept preferred name
     * possible object is
     * {@link String }
     */
    public String getConceptPreferredName() {
        return getPrimaryConceptPreferredName();
    }

    /**
     * Sets the value of the conceptPreferredName property.
     * @param value allowed object is
     * {@link String }
     */
    public void setConceptPreferredName(String value) {
        setPrimaryConceptPreferredName(value);
    }

    /**
     * Gets the value of the conceptDefinition property.
     * @return the concept definition
     * possible object is
     * {@link String }
     */
    public String getConceptDefinition() {
        return getPrimaryConceptDefinition();
    }

    /**
     * Sets the value of the conceptDefinition property.
     * @param value allowed object is
     * {@link String }
     */
    public void setConceptDefinition(String value) {
        setPrimaryConceptDefinition(value);
    }

	/**
	 * Gets the collection of Qualifier.
	 * @return the list of qualifier
	 * @see edu.common.dynamicextensions.domaininterface.SemanticPropertyInterface#getListOfQualifier()
	 */
	public Collection<SemanticPropertyInterface> getListOfQualifier()
	{
		return null;
	}

	/**
	 * Gets the Qualifier number.
	 * @return the sequence number
	 * @see edu.common.dynamicextensions.domaininterface.SemanticPropertyInterface#getSequenceNumber()
	 */
	public long getSequenceNumber()
	{
		return 0;
	}

	/**
	 * Sets the collection of Qualifier.
	 * @param listOfQualifier the list of qualifier
	 * @see edu.common.dynamicextensions.domaininterface.SemanticPropertyInterface#setListOfQualifier(java.util.Collection)
	 */
	public void setListOfQualifier(Collection<SemanticPropertyInterface> listOfQualifier)
	{

	}

	/**
	 * Sets the Qualifier number.
	 * @param sequenceNumber the sequence number
	 * @see edu.common.dynamicextensions.domaininterface.SemanticPropertyInterface#setSequenceNumber(long)
	 */
	public void setSequenceNumber(long sequenceNumber)
	{

	}

	/**
	 * Compares two objects.
	 * @param o the o
	 * @return the int
	 * @see java.lang.Comparable#compareTo(java.lang.Object)
	 */
	public int compareTo(Object o)
	{
		return 0;
	}

}
