<?xml version ="1.0"?>

<!--Ant Script for create Build for caTISSUE Core-->
<project name="DynamicExtensions" default="compile">
	
	<!--define require dir and Properties -->	
	<property file="DynamicExtensions.properties"/>
	
	<property name="base.dir" value="."/>
    <property name="src.dir" value="src"/>
    <property name="target.dir" value="WEB-INF/classes"/>
    <property name="lib.dir" value="${base.dir}/WEB-INF/lib"/>
    <property name="build.dir" value="${base.dir}/build"/>
    <property name="applet.dir" value="${base.dir}/Applet"/>
	<property name="interface.dir" value="${base.dir}/DynamicExtensionsInterface"/>
	<property name="interface.src.dir" value="${base.dir}/DynamicExtensionsInterfaceSource"/>
	<property name="javadoc.dir" value="${base.dir}/JavaDoc"/>
	<property name="javadoc.zip" value="DynamicExtensionsJavaDoc.zip"/>
	
	

	<property name="hbm.dir" value="${src.dir}/edu/common/dynamicextensions/hbm"/>
	<property name="extra_lib.dir" value="${base.dir}/extra_lib"/>
	<property name="generateforce" value="true"/>
		
	<property name="mysql.dir" value="${base.dir}/SQL/MySql"/>
	<property name="oracle.dir" value="${base.dir}/SQL/Oracle"/>
	<property name="common.dir" value="${base.dir}/SQL/Common"/>
	
	<!--Properties set for checkstyle "Tools that generate report of code convention violations"-->
	<property name="checkstyle.dir" value="${base.dir}/checkstyle"/>
	<property name="checkstyle.rules.file" value="${checkstyle.dir}/CheckStyleRules.xml"/>
	<property name="checkstyle.report.formatter" value="${checkstyle.dir}/report_formatter/checkstyle-simple.xsl"/>
	<property name="checkstyle.report.dir" value="${checkstyle.dir}/checkstyle_reports"/>
	<property name="checkstyle.unformatted.report" value="${checkstyle.report.dir}/checkstyle_report.xml"/>
	<property name="checkstyle.formatted.report" value="${checkstyle.report.dir}/checkstyle_report.html"/>

	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="xdoclet.classpath">
		<path refid="app.classpath"/>
        <pathelement location="${extra_lib.dir}/commons-net-1.2.2.jar"/>
		<pathelement location="${extra_lib.dir}/hibernate-tools.jar"/>
		<pathelement location="${extra_lib.dir}/servlet-api.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-hibernate-module-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-xdoclet-module-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xerces.jar"/>
		<pathelement location="${extra_lib.dir}/xjavadoc-1.0.2.jar"/>
		<pathelement location="${extra_lib.dir}/xsdlib.jar"/>
	</path>
	
	<!-- sub tasks -->    
	<target name="init">
    	<!-- Create the time stamp -->
	    <tstamp/>
    	<!-- Create the build directory structure used by compile -->
	    <mkdir dir="${target.dir}"/>
	    <mkdir dir="${build.dir}"/>
		
		<!-- Create the checkstyle report directory-->
		<delete dir="${checkstyle.report.dir}"/>
		<mkdir dir="${checkstyle.report.dir}"/>
  	</target>
	
	
	<target name="checkstyle" depends="init" description="Generates a report of code convention violations.">
		<taskdef resource="checkstyletask.properties" classpath="${extra_lib.dir}/checkstyle-all-3.4.jar"/>  

	    <checkstyle config="${checkstyle.rules.file}" failureProperty="checkstyle.failed" failOnViolation="false">
	    	<formatter type="xml" tofile="${checkstyle.unformatted.report}"/>
	      	<fileset dir="${src.dir}" includes="**/*.java"/>
	    </checkstyle>

	    <style in="${checkstyle.unformatted.report}" out="${checkstyle.formatted.report}" style="${checkstyle.report.formatter}"/>
	</target>
	
	<target name="checkstyle_wrapper" depends="checkstyle" description="Breaks the build is checkstyle detected code conventions violations.">
	</target>
	
	<!-- Compile all files, generated and hand-written -->
    <target name="compile" depends="init">
        <javac destdir="${target.dir}" includes="**/*.*" includeAntRuntime="false">
            <src path="${src.dir}"/>
            <classpath>
              <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath>       
        </javac>
    	<copy todir="${target.dir}">
    		<fileset dir="${src.dir}">
    			<include name="**/*.properties"/>
    			<include name="**/*.xml"/>
    			<include name="**/*.hbm.xml"/>
    			<include name="**/*.ser"/>
	    	</fileset>
    	</copy>
    	
    </target>
  	
	<!-- Create the Applet JAR Begins-->
    <target name="AppletJAR" depends="compile" >
    	<delete>
            <fileset dir="${applet.dir}">
	            <exclude name="**/CVS*"/>
	            <exclude name="**/java.policy.applet*"/>
            </fileset>
        </delete>
        
        <copy todir="${applet.dir}">
        	<fileset dir="${target.dir}">
            	<include name="**/QueryTree.class"/>
				<include name="**/NodeSelectionListener.class"/>
				<include name="**/StorageLocationViewListener.class"/>
				<include name="**/TissueSiteTreeNodeListener.class"/>
        	</fileset>
        </copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/query">
        	<fileset dir="${target.dir}/edu/wustl/catissuecore/query">
	    	    <include name="**/QueryTreeNodeMap.class"/>
	    	    <include name="**/TreeNodeData.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/storage">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/storage">
	    	    <include name="**/GenerateTree.class"/>
	    	    <include name="**/StorageContainerGridObject.class"/>
	    	    <include name="**/StorageContainerTreeNode.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/tissuesite">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/tissuesite">
	    	    <include name="**/TissueSiteTreeNode.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/util/global">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/util/global">
	    	    <include name="**/Constants.class"/>
    		</fileset>
    	</copy>
    	<copy todir="${applet.dir}/edu/wustl/catissuecore/vo">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/vo">
	    	    <include name="**/TreeNode.class"/>
	    	    <include name="**/TreeNodeFactory.class"/>
    		</fileset>
    	</copy>
    	
        <jar taskname="buildJar" jarfile="${applet.dir}/QueryTree.jar">
            <fileset dir="${applet.dir}">
	            <exclude name="**/CVS*"/>
	            <exclude name="**/java.policy.applet*"/>
            </fileset>
        </jar>
    </target>
	<!-- Create the Applet JAR Ends-->
	
	
	<!-- Create dynamic extensions jar Begins-->
	    <target name="createDynamicExtensionsInterfaceJAR" depends="compile" >
    	   <jar taskname="buildJar" jarfile="${interface.dir}/DynamicExtensions.jar">
	    		<fileset dir="${target.dir}" >
	    				<include name="**/domain/**/*.class"/>
	    				<include name="**/domaininterface/**/*.class"/>
	    				<include name="**/exception/*.class"/>
	    				<include name="**/entitymanager/**.class"/>
    		    </fileset>
	        	 <manifest>
	        	      <attribute name="Built-By" value="Sujay Narkar"/>
	        	 	 
	        	      <section name="${DynamicExtensions.jar.details}">
	        	        <attribute name="Version" value="${DynamicExtensions.jar.version}"/>
	        	      	<attribute name="Creation date" value="${DynamicExtensions.jar.creationDate}"/>
	        	      </section>
	        	 </manifest>
	        </jar>
	    </target>
	<!-- Create dynamic extensions jar Ends-->
	
	
	<!-- Create dynamic extensions jar Begins-->
		    <target name="createDynamicExtensionsCommunicationJAR" depends="compile" >
	    	   <jar taskname="buildJar" jarfile="DynamicExtensionsCommunication.jar">
		    		<fileset dir="${target.dir}" >
		    				<include name="**/WebUIManager.class"/>
			    			<include name="**/WebUIManagerConstants.class"/>
	 	  		    </fileset>
	    	   	
		        	 <manifest>
		        	      <attribute name="Built-By" value="Sujay Narkar"/>
		        	 	 
		        	      <section name="${DynamicExtensions.jar.details}">
		        	        <attribute name="Version" value="${DynamicExtensions.jar.version}"/>
		        	      	<attribute name="Creation date" value="${DynamicExtensions.jar.creationDate}"/>
		        	      </section>
		        	 </manifest>
		        </jar>
		    </target>
		<!-- Create dynamic extensions jar Ends-->
	
	<target name="createDynamicExtensionsInterfaceSourceZip" depends="compile" >
		<zip destfile="${interface.src.dir}/DynamicExtensions-src.zip" >
		      	<fileset dir="${src.dir}" >
	    				<include name="**/domain/**/*.java"/>
	    				<include name="**/domaininterface/**/*.java"/>
	    				<include name="**/exception/*.java"/>
	    				<include name="**/entitymanager/**.java"/>
	    		 </fileset>
	   </zip>
	</target>
	
	
	<!-- Creates the WAR (Web Application Archive) file of the application -->
	<target name="BuildAppWAR" depends="init">
		<delete file="dynamicExtensions.war"/>
		<war destfile="dynamicExtensions.war" webxml="WEB-INF/web.xml">
			<fileset dir="${base.dir}">
				<exclude name="**/*build*"/>
				<exclude name="**/*WEB-INF*"/>
				<exclude name="**/WEB-INF/src*/**"/>
				<exclude name="**/*servlet.jar*"/>
				<exclude name="**/*log4j-1.2.9.jar*"/>
				<exclude name="**/*hibernate2.jar*"/>
				<exclude name="**/*jta.jar*"/>
				<exclude name="**/.*"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/CVS*"/>
				<exclude name="**/catissuecorecsm.war"/>
				<exclude name="**/cawebeav.war"/>
				<exclude name="**/caTissue_Core_Installable.zip"/>
				<exclude name="**/caTissue_Core_Installable/**"/>
				<exclude name="**/caTISSUECore caCORE Client/**"/>
				<exclude name="**/src/**"/>
				<exclude name="**/test/**"/>
				<exclude name="**/*Build.xml*"/>
				
			</fileset>
			
			<fileset dir="${src.dir}/">
				<include name="*.*"/>
			</fileset>
		</war>
	</target>

	<!--Deploys the application war file at JBOSS server by coping it to deploy directory of application server-->
	<target name="Deploy" >
		<antcall target="BuildAppWAR"/>
		
		<delete file="${jboss.home.dir}/server/default/deploy/dynamicExtensions.war"/>
		<copy file="dynamicExtensions.war" todir="${jboss.home.dir}/server/default/deploy"/>
		<sleep seconds="2"/>
	</target>
	
	<target name="buildjar" depends="compile" >
	        <delete>
	            <fileset dir="${build.dir}" includes="**/*"/>
	        </delete>
	        
	        <jar taskname="buildJar" jarfile="${build.dir}/cawebeav.jar">
	            <fileset dir="${target.dir}" includes="**/*"/>
	        </jar>
	    </target>
	
	
	<target name="Genrate-Schema" depends="buildjar">
	    	<java classname="edu.wustl.common.util.dbManager.GenerateSchema">
	    		<arg value="false"/>	
	            <classpath>
		            <pathelement location="${build.dir}/cawebeav.jar"/>
	            	<fileset dir="${lib.dir}">
	                  <include name="*.jar"/>
	              </fileset>
	            </classpath>       
	      	</java>
	    </target>
    
	<!-- Generates the Hibernate mapping (HBM) files which are used in mapping 
		 the domain objects to database schema of the application. 
		 This generates the HBM files from the XDoclet tags written in the domain object classes. -->
    <target name="generateHBM" description="Generates Hibernate class descriptor files.">
    	<!-- Define the hibernatedoclet task -->    	
    	<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
    		<classpath refid="xdoclet.classpath"/>
		</taskdef>    
		
		<!-- Execute the hibernatedoclet task -->		
		<hibernatedoclet destdir="${src.dir}" excludedtags="@version,@author,@todo"
					     force="${generateforce}" mergedir="${src.dir}" verbose="false">
			<fileset dir="${src.dir}">
				<include name="**/domain/**/*.java"/>
			</fileset>
    		<hibernate version="2.0"/>
		</hibernatedoclet>	
		
		<!-- Upgrade grammar from Hibernate1 to Hibernate2 -->
	    <replace dir="${src.dir}">
	    	<include name="**/domain/**/*.hbm.xml"/>
	        <include name="**/cde/*.hbm.xml"/>
	    	
	        <replacefilter token="readonly=" value="inverse="/>
	        <replacefilter token="role=" value="name="/>
	        <replacefilter token="hibernate-mapping.dtd" value="hibernate-mapping-2.0.dtd"/>
	    </replace>
	    
	    <copy todir="${hbm.dir}">
	    	<fileset dir="${src.dir}/edu/common/dynamicextensions/domain">
	    		<include name="**/*.hbm.xml"/>
    		</fileset>
	    </copy>
    	
    	<delete>
            <fileset dir="${src.dir}/edu/common/dynamicextensions/domain" includes="**/*.hbm.xml"/>
        </delete>
    </target>

	<target name="DBInitialized_MySQL">
	    <sql
	    	driver="org.gjt.mm.mysql.Driver"
			url="jdbc:mysql://${database.host}:${database.port}/${database.name}"
			userid="${database.username}" password="${database.password}"  onerror="continue">
	    	
			<transaction src="${mysql.dir}/catissuecore.sql"/>
			<transaction src="${mysql.dir}/csm_catissuecore.sql"/>	
			<transaction src="${mysql.dir}/InitDB_CreateTable.sql"/>
			<transaction src="${common.dir}/AlterTable.sql"/>
			<transaction src="${common.dir}/initDB_Insert_Common.sql"/>
			<transaction  src="${common.dir}/CDE_DummyData_Common.sql"/>
			  
			<classpath>
	        	<fileset dir="${lib.dir}">
	            	<include name="*.jar"/>
				</fileset>
			</classpath> 
		</sql>
	</target>

	<target name="DBInitialized_Oracle">
		<sql 
			driver="oracle.jdbc.driver.OracleDriver"
			url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
			userid="${database.username}" password="${database.password}" onerror="continue"
	    	rdbms="oracle">
			<transaction  src="${oracle.dir}/catissuecore.sql"/>
			<transaction  src="${oracle.dir}/InitDB_CreateTable.sql"/>
			<transaction  src="${common.dir}/initDB_Insert_Common.sql"/>
			<transaction  src="${common.dir}/AlterTable.sql"/>
			<transaction  src="${common.dir}/CDE_DummyData_Common.sql"/>
			<transaction  src="${oracle.dir}/CSM_Create_Oracle.sql"/>
	    	
			<classpath>
	        	<fileset dir="${lib.dir}">
	            	<include name="*.jar"/>
	             </fileset>
			</classpath> 
		</sql>
		
		<sql
			driver="oracle.jdbc.driver.OracleDriver"
			url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
			userid="${database.username}" password="${database.password}" onerror="continue"
			delimiter="/" delimitertype="row" keepformat="yes">
			
			<transaction  src="${oracle.dir}/CSM_Trigger_Oracle.sql"/>
				<classpath>
		            <fileset dir="${lib.dir}">
		            	<include name="*.jar"/>
		            </fileset>
	            </classpath> 
			</sql>
			
		<sql
			driver="oracle.jdbc.driver.OracleDriver"
			url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
			userid="${database.username}" password="${database.password}" onerror="continue"
    		rdbms="oracle">
		  	
		  	<transaction  src="${oracle.dir}/CSM_InsertData_Oracle.sql"/>	
   		 	<transaction  src="${oracle.dir}/CSM_AddConstraints_Oracle.sql"/>
		  	<classpath>
            	<fileset dir="${lib.dir}">
                	<include name="*.jar"/>
              	</fileset>
            </classpath> 
		</sql>
	</target>

	

	<!-- ==================================================================================
 **
 **   Javadoc Task
 **
 **  =================================================================================-->
	<!--  Generates javadocs on all source  -->
	<target name="javadoc" description="Generate the documentation">
		<mkdir dir="${javadoc.dir}" />
		<javadoc access="private" packagenames="edu.common.*" destdir="${javadoc.dir}" author="true" version="true" windowtitle="Dynamic Extensions API" maxmemory="512m" classpathref="app.classpath" breakiterator="yes">

						
			 <fileset dir="${src.dir}" defaultexcludes="yes">
			      <include name="edu/common/dynamicextensions/domain/**"/>
			 	  <include name="edu/common/dynamicextensions/domain/databaseproperties/**"/>
			 	  <include name="edu/common/dynamicextensions/domain/userinterface/**"/>
			 	  <include name="edu/common/dynamicextensions/domain/validationrules/**"/>
			 	  <include name="edu/common/dynamicextensions/domaininterface/**"/>
			 	  <include name="edu/common/dynamicextensions/domaininterface/databaseproperties/**"/>
 	 		 	  <include name="edu/common/dynamicextensions/domaininterface/userinterface/**"/>
			 	  <include name="edu/common/dynamicextensions/domaininterface/validationrules/**"/>
			 	  <include name="edu/common/dynamicextensions/exception/**"/>
			 	  <include name="edu/common/dynamicextensions/entitymanager/**"/>		 	
		    </fileset>

			<bottom>
				<![CDATA[<i>
				<b>Copyright @ 2004-05 by WashU 
                                Corporation<br>All Rights Reserved.<br>WashU
                                CONFIDENTIAL AND TRADE SECRET</b>
					</i>]]></bottom>

			</javadoc>
			<jar basedir="${javadoc.dir}" destfile="${javadoc.dir}/${javadoc.zip}" />
	</target>
		
	<target name="Create_Installable_Zip" depends="BuildAppWAR">
		<property name="zip.dir" value="${base.dir}/caTISSUE_Core_Installable"/>
		<delete file="${base.dir}/caTissue_Core_Installable.zip"/>
		<delete dir="${base.dir}/caTissue_Core_Installable"/>
		<mkdir dir="${zip.dir}"/>
		<copy file="caelmir.war" todir="${zip.dir}" overwrite="true"/>
		<!--<copy file="catissuecorecsm.war" todir="${zip.dir}" overwrite="true"/>-->
		<copy file="caelmir-ds.xml" todir="${zip.dir}" overwrite="true"/>
		<copy file="caELMIRInstall.properties" todir="${zip.dir}" overwrite="true"/>
		<copy file="deploy.xml" todir="${zip.dir}" overwrite="true"/>		
		
		<copy todir="${zip.dir}/caelmir-properties" overwrite="true">
			<fileset dir="${base.dir}/caelmir-properties"/>
		</copy>
		
		<copy todir="${zip.dir}/lib" overwrite="true">
			<fileset file="${base.dir}/extra_lib/ant-contrib.jar"/>
			<fileset file="${base.dir}/WEB-INF/lib/mysql-connector-java-3.0.16-ga-bin.jar"/>
			<fileset file="${base.dir}/WEB-INF/lib/oracleDriver.jar"/>
		</copy>
		
		<copy todir="${zip.dir}/configuration" overwrite="true">
			<fileset file="${base.dir}/Accessibility.txt"/>
			<fileset file="${base.dir}/ContactUs.txt"/>
			<fileset file="${base.dir}/Disclaimer.txt"/>
			<fileset file="${base.dir}/PrivacyNotice.txt"/>
		</copy>
		
		<copy todir="${zip.dir}/SQL" overwrite="true">
			<fileset dir="${base.dir}/SQL"/>
		</copy>
		<delete dir="${zip.dir}/SQL/DBUpgrade"/>
		
		<copy file="MySql_DB_Creation.sql" todir="${zip.dir}" overwrite="true"/>
		<copy file="Oracle_DB_Creation.sql" todir="${zip.dir}" overwrite="true"/>
		<copy file="Sample-log4j.xml" todir="${zip.dir}" overwrite="true"/>
		<copy file="Sample-login-config.xml" todir="${zip.dir}" overwrite="true"/>
		<copy file="Sample-properties-service.xml" todir="${zip.dir}" overwrite="true"/>
	
		<copy todir="${zip.dir}/images" overwrite="true">
			<fileset file="${base.dir}/images/InstitutionLogo.gif"/>
		</copy>
		
	<!--	<copy todir="${zip.dir}/caTISSUECore caCORE Client" overwrite="true">
			<fileset dir="${base.dir}/caTISSUECore caCORE Client"/>
		</copy>-->
			
		<zip destfile="${base.dir}/caTissue_Core_Installable.zip" basedir="${zip.dir}"></zip>
		<delete dir="${zip.dir}"/>
	</target>
</project>