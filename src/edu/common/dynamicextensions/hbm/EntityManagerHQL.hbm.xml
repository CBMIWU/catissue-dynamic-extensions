<?xml version='1.0'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

 <hibernate-mapping>
    <query name="getEntitiesByConceptCode">
       from Entity entity
		   	join entity.semanticPropertyCollection semanticProperty
		   		where semanticProperty.conceptCode = ?
	</query>

	<query name="getAssociation">
		from Association association
           		where  association.entity.name = ?
           		AND association.sourceRole.name = ?

	</query>
	
	<query name="getAssociationBySourceTargetEntity">
		from Association association
           		where  association.entity.name = ?
           		AND association.name = ?
          		AND association.targetEntity.name = ?
           		

	</query>
	
	<query name="getAssociationByName">
		from Association association
           		where  association.name = ? 		
	</query>

	<query name="getAssociations">
       from Association association
	       	where association.entity.id = ? AND
       			   	association.targetEntity.id = ?
	</query>

	<query name="getAllContainersByEntityGroupId">
	   from edu.common.dynamicextensions.domain.userinterface.Container container
	         	where container.abstractEntity.id in
             			(select entity.id
                      		from Entity entity
	                             join entity.entityGroup entityGroup
	                                     where entityGroup.id = ?)
	</query>

	<query name="getContainerOfEntity">
		from edu.common.dynamicextensions.domain.userinterface.Container container
           		where  container.abstractEntity.id = ?
	</query>

	<query name="getControlOfAbstractAttribute">
		from Control control
           		where  control.baseAbstractAttribute.id = ?
	</query>

	<query name="getAllContainersBeansByEntityGroupId">
			select container.id,container.caption
			   from edu.common.dynamicextensions.domain.userinterface.Container container
			         	where container.abstractEntity.id in
		             			(select entity.id
		                      		from Entity entity
			                             join entity.entityGroup entityGroup
			                                     where entityGroup.id = ?)
	</query>

	<query name="getAllEntityCreatedDateByContainerId">
			select container.id,container.abstractEntity.createdDate
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>

	<query name="getAllContainerBeans">
			select container.id,container.caption
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>

	<query name="getAllContainerInformationObjects">
			select container.id,container.caption,container.abstractEntity.description
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>



	<query name="getEntityIdForContainerId">
			select container.abstractEntity.id
			   from edu.common.dynamicextensions.domain.userinterface.Container container
			   where container.id = ?
	</query>

	<query name="getAllGroupBeans">
		select entityGroup.name,entityGroup.id
			   from EntityGroup entityGroup
			   		where entityGroup.isSystemGenerated = false
	</query>
	<query name="getEntityGroupBeanById">
		select entityGroup.name,entityGroup.id
			   from EntityGroup entityGroup
			   		where entityGroup.isSystemGenerated = false 
			   		AND entityGroup.id = ?
	</query>
	<query name="checkDuplicateGroupName">
		select count(*)
			   from EntityGroup entityGroup where entityGroup.name = ?
	</query>

	<query name="getChildrenEntities">
	   from Entity entity
	      where entity.parentEntity.id = ?
	</query>

	<query name="getAssociationByIdentifier">
	   from Association association
	      where association.id = ?
	</query>

	<query name="getAssociationsForTargetEntity">
	   from Association association
	      where association.targetEntity.id = ?
	</query>

	<query name="getMainContainers">
	  select new edu.wustl.common.beans.NameValueBean(mainContainers.caption , mainContainers.id)
		    from EntityGroup entityGroup
		          join entityGroup.mainContainerCollection as mainContainers
 			       		where entityGroup.id =  ?
<!--  Bug# 5094 - Commenting this condition as we should be able to see abstract forms for future editing.
	 To avoid data entry in abstract forms, we need to check the abstract attribute for entity in code. - Ashish 18/9/07
	 -->
<!--			       		  	 and mainContainers.entity.abstract = false   -->
	</query>

	<query name="getContainerCaption">
	  select container.caption
		    from edu.common.dynamicextensions.domain.userinterface.Container container
 			       		where container.id =  ?
	</query>
	<query name="checkContainerForAbstractEntity">
      select container.id
            from edu.common.dynamicextensions.domain.userinterface.Container container,edu.common.dynamicextensions.domain.AbstractEntity abstractEntity,
            edu.common.dynamicextensions.domain.Entity entity 
                        where container.id = ?   AND container.abstractEntity.id = entity.id AND entity.abstract = ?      
  	</query>
	<query name="checkContainerForAbstractCategoryEntity">
      select container.id
            from edu.common.dynamicextensions.domain.userinterface.Container container,edu.common.dynamicextensions.domain.AbstractEntity abstractEntity,
			edu.common.dynamicextensions.domain.CategoryEntity categoryentity
                        where container.id = ?   AND container.abstractEntity.id = categoryentity.id
  	</query>
	<query name="getAssociationIdsForTargetEntity">
	   select association.id
	   	from edu.common.dynamicextensions.domain.Association association
	      where association.targetEntity.id = ?
	</query>
	<query name="getAttributeRecords">
		select count(*)
       		from AttributeRecord attributeRecord
	       		where attributeRecord.entity.id = ? AND
       			   	attributeRecord.attribute.id = ?
	</query>
	<query name="getCollectionAttributeRecord">
       from AttributeRecord collectionAttributeRecord
	       	where collectionAttributeRecord.entity.id = ? AND
       			   	collectionAttributeRecord.attribute.id = ? AND
       			   	     collectionAttributeRecord.recordId = ?
	</query>

    <query name="isCategory">
	 select catEntity.id
         from  edu.common.dynamicextensions.domain.CategoryEntity catEntity 	
            where catEntity.containerCollection.id=?
	</query>

     <query name="getFormsContainerIdFromHookEntiy">
     select new edu.wustl.common.beans.NameValueBean(entity.entityGroup.name||' -- '||container.caption , container.id) 
	   from edu.common.dynamicextensions.domain.userinterface.Container container, 
	   edu.common.dynamicextensions.domain.Entity entity 
	    
		   where container.abstractEntity.id = entity.id and entity.abstract = false and container.abstractEntity.id in
		   (      
			   select association.targetEntity.id
			       from Association association
				       	where association.entity.id = ?

		   )
    </query>

	<query name="getCategoryContainerIdFromHookEntiy">
	  select new edu.wustl.common.beans.NameValueBean(catColl.name , container.id) 
	   from edu.common.dynamicextensions.domain.userinterface.Container container  , 
         edu.common.dynamicextensions.domain.CategoryEntity catEntity 	
		 join catEntity.categoryCollection as catColl           

		   where container.abstractEntity.id in
		   (
		      select category.rootCategoryElement.id
				from  edu.common.dynamicextensions.domain.Category category
					where category.rootCategoryElement.entity.id in
						(
							select association.targetEntity.id
						       from Association association
							       	where association.entity.id = ?
						)						
			)  
			and catEntity.containerCollection.id=container.id
	</query>

	<query name="getDynamicTableName">
	 select tableProperty.name
		from edu.common.dynamicextensions.domain.userinterface.Container container   
			join container.abstractEntity.tablePropertiesCollection tableProperty
				where container.id = ?
	</query>

	<query name="getColumnNameForAssociation">
	 select constraintColl.targetEntityKey
       from Association association
		   join association.constraintPropertiesCollection constraintColl
		   join association.targetEntity.containerCollection contColl
			   	where association.entity.id = ?
				and contColl.id = ?
	</query>

	<query name="getCategoryRootContainerId">
	 select  container.id
		from edu.common.dynamicextensions.domain.userinterface.Container container
		   where container.abstractEntity.id in
		   (
			select category.rootCategoryElement.entity.id
				from  edu.common.dynamicextensions.domain.Category category
					join category.rootCategoryElement.containerCollection contColl
						where contColl.id= ?
			)
   </query>
   <query name="getEntityGroupId">
   		select abstractMetadata.id from AbstractMetadata abstractMetadata where abstractMetadata.name = ?
   </query>
   <query name="getEntityId">
   		select entity.id from Entity entity where entity.entityGroup.id = ? and entity.name = ?
   </query>
   <query name="getEntityIdentifier">
   		select entity.id from Entity entity where entity.name = ?
   </query>
   <query name="getAttributeId">
   		select absAttr.id from AbstractAttribute absAttr where absAttr.entity.id = ? and absAttr.name = ?
   </query>
   <query name="getMultiSelAttrId">
   		select absAttr.id from AbstractAttribute absAttr where absAttr.entity.id = ? and absAttr.name like ?
   </query>
   <query name="getAttributeTypeObject">
   		select attr.attributeTypeInformationCollection from Attribute attr where attr.id = ?
   </query>
   <query name="getContainerIdByName">
		select container.id
		from edu.common.dynamicextensions.domain.userinterface.Container container
		where container.caption=?
	</query>
	
    <query name="getRootCategoryEntityCaptionById">
		select category.name
		from edu.common.dynamicextensions.domain.Category category
		where category.rootCategoryElement.id =?
	</query>
	<query name="getEntityIdByCategoryEntityId">
		select entity.id
		from edu.common.dynamicextensions.domain.CategoryEntity categoryEntity
		where categoryEntity.id=?
	</query>
	<query name="getTargetEntityIdForCollAttribute">
   		select association.targetEntity.id	
		from Association association
        where  association.id = ? AND association.isCollection = ?
    </query>
</hibernate-mapping>